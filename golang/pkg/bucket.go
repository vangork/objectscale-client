package pkg

// #include "objectscale_client.h"
import "C"

// Buckets are object containers that are used to control access to objects. ObjectScale supports bucket-to-bucket replication of the objects within a bucket.
type Bucket struct {
	// Name assigned to this resource in ECS. The resource name is set by a user and can be changed at any time. It is not a unique identifier.
	Name string `attr:"name" yaml:"name" json:"name"`
	// Identifier that is generated by ECS when the resource is created. The resource Id is guaranteed to be unique and immutable across all virtual data centers for all time.
	Id string `attr:"id" yaml:"id" json:"id"`
	// Hyperlink to the details for this resource
	Link Link `attr:"link" yaml:"link" json:"link"`
	// Namespace
	Namespace string `attr:"namespace" yaml:"namespace" json:"namespace"`
	//
	Replication string `attr:"replication" yaml:"replication" json:"replication"`
	// "Locked" status of a bucket
	Locked bool `attr:"locked" yaml:"locked" json:"locked"`
	// Bucket "file system access enabled" status
	FsAcessEnabled bool `attr:"fs_acess_enabled" yaml:"fs_acess_enabled" json:"fsAcessEnabled"`
	// Bucket soft quota
	SoftQuota string `attr:"soft_quota" yaml:"soft_quota" json:"softQuota"`
	// Bucket creation time
	Created string `attr:"created" yaml:"created" json:"created"`
	// Bucket isStaleAllowed flag
	IsStaleAllowed bool `attr:"is_stale_allowed" yaml:"is_stale_allowed" json:"isStaleAllowed"`
	// If true Object Lock and ADO can be enabled together. See the Admin Guide for more information.
	ObjectLockWithAdoAllowed bool `attr:"object_lock_with_ado_allowed" yaml:"object_lock_with_ado_allowed" json:"objectLockWithAdoAllowed"`
	// Bucket isStaleAllowed flag
	IsTsoReadOnly bool `attr:"is_tso_read_only" yaml:"is_tso_read_only" json:"isTsoReadOnly"`
	// Default object lock retention mode
	DefaultObjectLockRetentionMode string `attr:"default_object_lock_retention_mode" yaml:"default_object_lock_retention_mode" json:"defaultObjectLockRetentionMode"`
	// Default object lock retention years
	DefaultObjectLockRetentionYears int32 `attr:"default_object_lock_retention_years" yaml:"default_object_lock_retention_years" json:"defaultObjectLockRetentionYears"`
	// Default object lock retention days
	DefaultObjectLockRetentionDays int32 `attr:"default_object_lock_retention_days" yaml:"default_object_lock_retention_days" json:"defaultObjectLockRetentionDays"`
	// Default bucket retention
	DefaultRetention int64 `attr:"default_retention" yaml:"default_retention" json:"defaultRetention"`
	// Block size in GB
	BlockSizeInGB int64 `attr:"block_size_in_g_b" yaml:"block_size_in_g_b" json:"blockSizeInGB"`
	// auto-commit interval
	AutoCommitPeriod int64 `attr:"auto_commit_period" yaml:"auto_commit_period" json:"autoCommitPeriod"`
	// Notification size in GB
	NotificationSizeInGB int64 `attr:"notification_size_in_g_b" yaml:"notification_size_in_g_b" json:"notificationSizeInGB"`
	//
	BlockSizeInCount int64 `attr:"block_size_in_count" yaml:"block_size_in_count" json:"blockSizeInCount"`
	//
	NotificationSizeInCount int64 `attr:"notification_size_in_count" yaml:"notification_size_in_count" json:"notificationSizeInCount"`
	// Bucket isEncryptionEnabled flag
	IsEncryptionEnabled bool `attr:"is_encryption_enabled" yaml:"is_encryption_enabled" json:"isEncryptionEnabled"`
	// Default retention value for the bucket.
	Retention int64 `attr:"retention" yaml:"retention" json:"retention"`
	// Bucket's default group
	DefaultGroup string `attr:"default_group" yaml:"default_group" json:"defaultGroup"`
	// Flag indicating the Read permission for default group
	DefaultGroupFileReadPermission bool `attr:"default_group_file_read_permission" yaml:"default_group_file_read_permission" json:"defaultGroupFileReadPermission"`
	// Flag indicating the file write permission for default group
	DefaultGroupFileWritePermission bool `attr:"default_group_file_write_permission" yaml:"default_group_file_write_permission" json:"defaultGroupFileWritePermission"`
	// Flag indicating the file execute permission for default group
	DefaultGroupFileExecutePermission bool `attr:"default_group_file_execute_permission" yaml:"default_group_file_execute_permission" json:"defaultGroupFileExecutePermission"`
	// Flag indicating the directory read permission for default group. This is only applicable to folders created within the Filesystem-Enabled bucket. It is not applicable to files/objects
	DefaultGroupDirReadPermission bool `attr:"default_group_dir_read_permission" yaml:"default_group_dir_read_permission" json:"defaultGroupDirReadPermission"`
	// Flag indicating the directory write permission for default group. This is only applicable to folders created within the Filesystem-Enabled bucket. It is not applicable to files/objects
	DefaultGroupDirWritePermission bool `attr:"default_group_dir_write_permission" yaml:"default_group_dir_write_permission" json:"defaultGroupDirWritePermission"`
	// Flag indicating the directory execute permission for default group. This is only applicable to folders created within the Filesystem-Enabled bucket. It is not applicable to files/objects
	DefaultGroupDirExecutePermission bool `attr:"default_group_dir_execute_permission" yaml:"default_group_dir_execute_permission" json:"defaultGroupDirExecutePermission"`
	//
	MinMaxGovernor MinMaxGovernor `attr:"min_max_governor" yaml:"min_max_governor" json:"minMaxGovernor"`
	// Bucket audit delete expiration in seconds
	AuditDeleteExpiration int64 `attr:"audit_delete_expiration" yaml:"audited_delete_expiration" json:"auditDeleteExpiration"`
	//
	EnableAdvancedMetadataSearch bool `attr:"enable_advanced_metadata_search" yaml:"enable_advanced_metadata_search" json:"enableAdvancedMetadataSearch"`
	//
	AdvancedMetadataSearchTargetName string `attr:"advanced_metadata_search_target_name" yaml:"advanced_metadata_search_target_name" json:"advancedMetadataSearchTargetName"`
	//
	AdvancedMetadataSearchTargetStream string `attr:"advanced_metadata_search_target_stream" yaml:"advanced_metadata_search_target_stream" json:"advancedMetadataSearchTargetStream"`
	// Optional. If true the bucket is in the process of being deleted. The bucket will be read only and no changes will be allowed on the bucket until the operation completes.
	IsEmptyBucketInProgress bool `attr:"is_empty_bucket_in_progress" yaml:"is_empty_bucket_in_progress" json:"isEmptyBucketInProgress"`
	//
	MetaData SearchMetaData `attr:"meta_data" yaml:"meta_data" json:"metaData"`
	// Local object metadata reads bucket flag.
	LocalObjectMetadataReads bool `attr:"local_object_metadata_reads" yaml:"local_object_metadata_reads" json:"localObjectMetadataReads"`
	// API type
	Apitype string `attr:"apitype" yaml:"apitype" json:"apitype"`
	// Bucket owner
	BucketOwner string `attr:"bucket_owner" yaml:"bucket_owner" json:"bucketOwner"`
	// Keywords and labels that can be added by a user to a resource to make it easy to find when doing a search.
	Tags []BucketTag `attr:"tags" yaml:"TagSet" json:"TagSet"`
}

// Lables for bucket.
type BucketTag struct {
	// The key of a tag.
	Key string `attr:"key" yaml:"Key" json:"key"`
	// The value of a tag.
	Value string `attr:"value" yaml:"Value" json:"value"`
}

type Link struct {
	//
	Rel string `attr:"rel" yaml:"rel" json:"rel"`
	//
	Href string `attr:"href" yaml:"href" json:"href"`
}

type MetaData struct {
	// The meta key type
	KeyDataType string `attr:"key_data_type" yaml:"key_data_type" json:"keyDataType"`
	// The meta key name
	KeyValue string `attr:"key_value" yaml:"key_value" json:"keyValue"`
	// The meta key data type
	MetadataType string `attr:"metadata_type" yaml:"metadata_type" json:"metadataType"`
}

type MinMaxGovernor struct {
	//
	EnforceRetention bool `attr:"enforce_retention" yaml:"enforce_retention" json:"enforceRetention"`
	//
	MinimumFixedRetention int64 `attr:"minimum_fixed_retention" yaml:"minimum_fixed_retention" json:"minimumFixedRetention"`
	//
	MaximumFixedRetention int64 `attr:"maximum_fixed_retention" yaml:"maximum_fixed_retention" json:"maximumFixedRetention"`
	//
	MinimumVariableRetention int64 `attr:"minimum_variable_retention" yaml:"minimum_variable_retention" json:"minimumVariableRetention"`
	//
	MaximumVariableRetention int64 `attr:"maximum_variable_retention" yaml:"maximum_variable_retention" json:"maximumVariableRetention"`
}

type SearchMetaData struct {
	// Getter for the enabled flag.
	IsEnabled bool `attr:"is_enabled" yaml:"is_enabled" json:"isEnabled"`
	//
	MetaData []MetaData `attr:"meta_data" yaml:"meta_data" json:"metaData"`
	// Getter for maxKeys.
	MaxKeys int32 `attr:"max_keys" yaml:"max_keys" json:"maxKeys"`
	// Getter for the mdTokens flag.
	MdTokens bool `attr:"md_tokens" yaml:"md_tokens" json:"mdTokens"`
}
