package pkg

// #include "objectscale_client.h"
import "C"

// A tenant is a logical construct resulting from the binding of an account to an object store.
type Tenant struct {
	// Name assigned to this resource in ECS. The resource name is set by a user and can be changed at any time. It is not a unique identifier.
	Name string `attr:"name" yaml:"name" json:"name"`
	// Identifier that is generated by ECS when the resource is created. The resource Id is guaranteed to be unique and immutable across all virtual data centers for all time.
	Id string `attr:"id" yaml:"account_id" json:"id"`
	// Hyperlink to the details for this resource
	Link string `attr:"link" yaml:"link" json:"link"`
	// Timestamp that shows when this resource was created in ECS
	CreationTime string `attr:"creation_time" yaml:"creation_time" json:"creationTime"`
	// Indicates whether the resource is inactive. When a user removes a resource, the resource is put in this state before it is removed from the ECS database.
	Inactive bool `attr:"inactive" yaml:"inactive" json:"inactive"`
	// Indicates whether the resource is global.
	Global bool `attr:"global" yaml:"global" json:"global"`
	// Indicates whether the resource is remote.
	Remote bool `attr:"remote" yaml:"remote" json:"remote"`
	// Indicated whether the resource is an internal resource
	Internal bool `attr:"internal" yaml:"internal" json:"internal"`
	//
	TenantDefaultVpool string `attr:"tenant_default_vpool" yaml:"tenant_default_vpool" json:"tenantDefaultVpool"`
	// tag to enable encryption for the tenant
	IsEncryptionEnabled bool `attr:"is_encryption_enabled" yaml:"is_encryption_enabled" json:"isEncryptionEnabled"`
	// Default bucket quota size.
	DefaultBucketBlockSize int64 `attr:"default_bucket_block_size" yaml:"default_bucket_block_size" json:"defaultBucketBlockSize"`
	// Tag to enable compliance compliance
	IsComplianceEnabled bool `attr:"is_compliance_enabled" yaml:"is_compliance_enabled" json:"isComplianceEnabled"`
	//
	HardQuotaInGB int64 `attr:"hard_quota_in_g_b" yaml:"hard_quota_in_g_b" json:"hardQuotaInGB"`
	//
	SoftQuotaInGB int64 `attr:"soft_quota_in_g_b" yaml:"soft_quota_in_g_b" json:"softQuotaInGB"`
	//
	HardQuotaInCount int64 `attr:"hard_quota_in_count" yaml:"hard_quota_in_count" json:"hardQuotaInCount"`
	//
	SoftQuotaInCount int64 `attr:"soft_quota_in_count" yaml:"soft_quota_in_count" json:"softQuotaInCount"`
	// Alias of tenant
	Alias string `attr:"alias" yaml:"alias" json:"alias"`
}
